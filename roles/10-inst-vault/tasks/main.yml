---

  - name: Start role
    debug:
      msg: "########### INSTALL VAULT IN DOCKER ###########"

#  - name: Vault - Install essentials
#    apt:
#      pkg:
#        - python3-pip
#    become: yes

#  - name: Vault - Instal python module hvac
#    pip:
#      name: hvac
#      state: present
#    become: yes

  - name: Vault - Create compose project dir
    file:
      path: "{{project_dir}}/vault"
      state: directory

  - name: Vault - Copy docker-compose.yml and vault.json to project
    template:
      src: "{{item}}"
      dest: "{{project_dir}}/vault/{{item}}"
    loop:
      - docker-compose.yml
      - config.hcl
      - vault-init.sh

  - name: Vault - Set execute vault-init.sh
    file:
      dest: "{{project_dir}}/vault/vault-init.sh"
      mode: a+x
    become: yes

  - name: Vault - check installation
    stat:
      path: "{{project_dir}}/vault/vault-root-token/.access-token"
    register: vault_status
    become: yes

  - name: Vault - read/create root token
    shell: "{% if vault_status.stat.exists %}cat {{project_dir}}/vault/vault-root-token/.access-token{% else %}openssl rand -hex 20{% endif %}"
    register: vault_token
#    when: vault_status.stat.exists
    become: yes

#  - name: Vault - Generate access token
#    shell: openssl rand -hex 20
#    register: vault_token
#    when: not vault_status.stat.exists

  - debug:
      var: vault_token.cmd

  - name: Vault - Up project
    shell: cd {{project_dir}}/vault && docker-compose up --build -d
    register: output
    environment:
      MY_VAULT_TOKEN: "{{vault_token.stdout}}"
    become: yes

  - debug:
      var: output.stderr_lines

#  - local_action: copy content={{ vault_token.stdout }} dest="/home/ansible/vault_root_token" mode='600' owner=ansible group=root
#    become: yes
#  - debug:
#      var: vault_token.stdout

  - name: Vault - Copy root token to file
    copy:
      dest: "{{project_dir}}/vault/vault-root-token/.access-token"
      content: "{{vault_token.stdout}}"
    when: not vault_status.stat.exists
    become: yes

  - name: Vault - init new engine with secrets
    include_tasks: "vault-init.yml"
    when: vault_engine_init


