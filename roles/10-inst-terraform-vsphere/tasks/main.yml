---

  - name: Start role
    debug:
      msg: "########### INSTALL TERRAFORM WITH VSPHERE PROVIDER & PACKER ###########"

  - name: Terraform - Create project dir
    file:
      path: "{{project_dir}}/terraform"
      state: directory

  - name: Terraform - Extract terraform binary file
    unarchive:
      src: "{{tf_terraform_archive}}"
      dest: "/usr/bin"

  - name: Terraform - Extract packer binary file
    unarchive:
      src: "{{tf_packer_archive}}"
      dest: "/usr/bin"

  - name: Terraform - Create terraform plugins dir
    file:
      path: "~/.terraform.d"
      state: directory

  - name: Terraform - Extract vsphere provider
    unarchive:
      src: "{{tf_provider_archive}}"
      dest: "~/.terraform.d"

  - name: Terraform - Create vm template
    block:
      - name: Packer - create workdir
        file:
          path: "{{project_dir}}/terraform/packer"
          state: directory
      - name: Packer - copy conf files
        template:
          src: "packer/{{item.srcf}}"
          dest: "{{project_dir}}/terraform/packer/{{item.dstf}}"
        loop:
          - { srcf: 'preseed.cfg.j2', dstf: 'preseed.cfg' }
          - { srcf: 'variables.pkr.hcl', dstf: 'variables.pkr.hcl' }
          - { srcf: 'vars.auto.pkrvars.hcl.j2', dstf: 'vars.auto.pkrvars.hcl' }
          - { srcf: 'vsphere-iso_basic_ubuntu.pkr.hcl.j2', dstf: 'vsphere-iso_basic_ubuntu.pkr.hcl' }
      - name: Packer - create template {{tf_vm_template_name}}, may take long time
        shell: cd {{project_dir}}/terraform/packer/ && packer build .
        register: output
      - debug: var=output.stdout_lines
    when: tf_vm_template == true



