---

  - name: Start role
    debug:
      msg: "########### INSTALL TERRAFORM WITH VSPHERE PROVIDER ###########"

  - name: Terraform - create project dir
    file:
      path: "{{ project_dir }}"
      state: directory
      mode: '0777'
    become: yes

  - name: Terraform - Create terraform project dir
    file:
      path: "{{project_dir}}/terraform"
#      mode: '775'
      state: directory
#    become: yes

  - name: Terraform - Create plugins dirs structure
    file:
      path: "~/.terraform.d/plugins/registry.terraform.io/{{item.source}}/{{item.version}}/linux_amd64/"
      state: directory
    loop: "{{tf_provider}}"

  - name: Terraform - Extract terraform binary file
    unarchive:
      src: "{{tf_terraform.arch}}"
      dest: "/usr/bin"
    become: yes
#    become_method: sudo
#    become_user: root

  - name: Terraform - Extract providers
    unarchive:
      src: "{{item.arch}}"
      dest: "~/.terraform.d/plugins/registry.terraform.io/{{item.source}}/{{item.version}}/linux_amd64/"
    loop: "{{tf_provider}}"

  - name: Terraform - Copy project files
    template:
      src: "{{item.srcf}}"
      dest: "{{project_dir}}/terraform/{{item.dstf}}"
    loop:
      - { srcf: 'main.tf.j2', dstf: 'main.tf' }
      - { srcf: 'variables.tf', dstf: 'variables.tf' }
      - { srcf: 'versions.tf.j2', dstf: 'versions.tf' }
      - { srcf: 'output.tf', dstf: 'output.tf' }
      - { srcf: 'provisioner.sh', dstf: 'provisioner.sh' }
#    become: yes

#  - name: Terraform - Change permisions
#    file:
#      path: "{{project_dir}}/terraform/variables.tf"
#      owner: ansible
#      group: root
#      mode: '600'
#    become: yes

  - name: Terraform - Init project
    shell: cd {{project_dir}}/terraform/ && terraform init -no-color
    register: output
#    become: yes
  - debug: var=output.stdout_lines



